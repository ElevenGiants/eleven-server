'use strict';

/**
 * Sample local configuration file for a "live" public environment.
 * The values here need to be adjusted for the specific target server.
 */

module.exports = {
	net: {
		gameServers: {
			gs01: {
				host: 'THIS.GS.HOST.IP',
				ports: [
					// add as many worker processes as you like (probably best
					// not to add more than the number of CPU cores, though)
					1443,
					1444,
					1445,
					1446
				],
			},
		},
		assetServer: {
			host: 'YOUR.ASSET.SERVER.IP',
			port: 8000,
		},
	},
	pers: {
		backEnd: {
			module: 'rethink',
			config: {
				rethink: {
					dbname: 'eleven_prod',
					dbhost: 'localhost',
					dbport: 28015,
					dbauth: 'RETHINKDB_AUTH_KEY',
					queryOpts: {
						durability: 'hard',
						noreply: false,
					},
				},
			},
		},
	},
	auth: {
		backEnd: {
			module: 'hmac',
			config: {
				hmac: {
					// secret used for auth token HMAC calculation (set this
					// to a random string):
					secret: 'CHANGE-ME-OR-ELSE',
					// minimum token lifetime in seconds:
					timeStep: 600,
				},
			},
		},
	},
	log: {
		dir: '/var/log/eleven',
		level: {
			file: 'info',
			stdout: 'fatal',
		},
		// enabling this has a significant performance impact:
		includeLoc: false,
	},
	mon: {
		statsd: {
			prefix: 'prod',
		},
	},
	debug: {
		// consider security and stability implications before enabling the
		// REPL server in a PROD environment
		repl: {
			enable: false,
		},
	},
	slack: {
		// the in-game chat group integration requires a "bot user" to be set
		// up in Slack, and the resulting API token needs to be set here
		chat: {
			token: 'xoxo-1234567890-T0keNfr0mSL4cK',
			groups: {
				RA512UITCLA22AD: 'livehelp',
				RA9118JTCLA204I: 'global',
			},
		},
		// server notifications/alerts need an "incoming WebHook" configured
		// in Slack, and its URL added here
		notify: {
			webhookUrl: 'https://hooks.slack.com/services/XYZ/asdfghjkl',
			channel: 'server-admins',
			botName: 'gameserver PROD',
		},
	},
};
